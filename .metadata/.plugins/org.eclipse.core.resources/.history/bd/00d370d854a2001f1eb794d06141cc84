package com.eshopping.order.dto;

import java.time.LocalDate;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.PastOrPresent;
import javax.validation.constraints.Size;

import com.eshopping.product.dto.ProductDTO;
import com.eshopping.profile.dto.AddressDTO;

import lombok.Data;

@Data
public class OrderDTO {

    @Min(value = 1, message = "Order ID must be a positive integer")
    private int orderId;

    @NotNull(message = "Order date cannot be null")
    @PastOrPresent(message = "Order date cannot be in the future")
    private LocalDate orderDate;

    @Min(value = 1, message = "Customer ID must be a positive integer")
    private int customerId;

    @DecimalMin(value = "0.0", inclusive = false, message = "Amount paid must be positive")
    private double amountPaid;

    @NotNull(message = "Mode of payment cannot be null")
    @Size(min = 3, max = 20, message = "Mode of payment must be between 3 and 20 characters")
    private String modeOfPayment;

    @NotNull(message = "Order status cannot be null")
    @Size(min = 3, max = 20, message = "Order status must be between 3 and 20 characters")
    private String orderStatus;

    @Min(value = 1, message = "Quantity must be at least 1")
    private int quantity;

    @NotNull(message = "Address cannot be null")
    private AddressDTO address;

    @NotNull(message = "Product cannot be null")
    private ProductDTO product;
}
