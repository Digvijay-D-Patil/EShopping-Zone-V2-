package com.eshopping.profile.exception;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
public class GlobalProfileExceptionHandler {

//	@ExceptionHandler(UserProfileNotFoundException.class)
//	public ResponseEntity<String> handleUserProfileNotFoundException(UserProfileNotFoundException ex) {
//		return new ResponseEntity<>(ex.getMessage(), HttpStatus.NOT_FOUND);
//	}

	@Test
	void getUser

	Profile_NotFound() throws Exception {
	    Long profileId = 1L;

	    // Mock the service to throw the exception
	    when(userService.getUser Profile(profileId))
	            .thenThrow(new UserProfileNotFoundException("User  Profile not found"));

	    // Perform the GET request and expect a 404 status
	    mockMvc.perform(get("/api/users/{profileId}", profileId))
	            .andExpect(status().isNotFound())
	            .andExpect(content().string("User  Profile not found")); // Optional: Check the response body
	}

}
