package com.cg.service;

import org.springframework.stereotype.Service;

import com.cg.entity.UserProfile;
import com.cg.repository.ProfileRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class UserServiceImpl implements UserService {

	private final ProfileRepository profileRepository;

	 @Override
	    public UserProfile addUserProfile(UserProfile userProfile) {
	        return profileRepository.save(userProfile);
	    }

	    @Override
	    public UserProfile getUserProfile(Long profileId) {
	        return profileRepository.findById(profileId)
	                .orElseThrow(() -> new UserProfileNotFoundException("UserProfile not found with ID: " + profileId));
	    }

	    @Override
	    public UserProfile getUserProfileByMobile(String mobileNumber) {
	        return profileRepository.findByMobileNumber(mobileNumber)
	                .orElseThrow(() -> new UserProfileNotFoundException("UserProfile not found with mobile number: " + mobileNumber));
	    }

	    @Override
	    public UserProfile getUserProfileByName(String firstName, String lastName) {
	        return profileRepository.findByFirstNameAndLastName(firstName, lastName)
	                .orElseThrow(() -> new UserProfileNotFoundException("UserProfile not found with name: " + firstName + " " + lastName));
	    }

	    @Override
	    public void deleteUserProfile(Long profileId) {
	        if (!profileRepository.existsById(profileId)) {
	            throw new UserProfileNotFoundException("Cannot delete. UserProfile not found with ID: " + profileId);
	        }
	        profileRepository.deleteById(profileId);
	    }
	}
	Step 3: Global Exception Handling with @ControllerAdvice
	Create an exception handler class that will catch UserProfileNotFoundException and other exceptions thrown by your service layer and return meaningful responses.

	GlobalExceptionHandler.java

	java
	Copy code
	package com.cg.exception;

	import org.springframework.http.HttpStatus;
	import org.springframework.http.ResponseEntity;
	import org.springframework.web.bind.annotation.ControllerAdvice;
	import org.springframework.web.bind.annotation.ExceptionHandler;

	@ControllerAdvice
	public class GlobalExceptionHandler {

	    @ExceptionHandler(UserProfileNotFoundException.class)
	    public ResponseEntity<String> handleUserProfileNotFoundException(UserProfileNotFoundException ex) {
	        return new ResponseEntity<>(ex.getMessage(), HttpStatus.NOT_FOUND);
	    }

	    @ExceptionHandler(Exception.class)
	    public ResponseEntity<String> handleGenericException(Exception ex) {
	        return new ResponseEntity<>("An error occurred: " + ex.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
	    }
}
